@startuml

class Complexity {
  + Cognitive: int
  + Cyclomatic: int
}

class Declaration {
  + Kind: DeclarationKind
  + Type: string
  + File: string
  + SelfContained: bool
  + Imports: []string
  + References: map[string][]string
  + Doc: string
  + Name: string
  + Names: []string
  + Receiver: string
  + Fields: FieldList
  + Arguments: []string
  + Returns: []string
  + Signature: string
  + Source: string
  + Complexity: *Complexity
}

class DeclarationKind {
  - type: string
  + String () string
}

class DeclarationList {
  - type: []*Declaration
  + Exported () []*Declaration
  + Filter (matchfn func(d *Declaration) bool) []*Declaration
  + Find (matchfn func(d *Declaration) bool) *Declaration
}

class Definition {
  + Doc: string
  + Imports: StringSet
  + Types: DeclarationList
  + Consts: DeclarationList
  + Vars: DeclarationList
  + Funcs: DeclarationList
}

class Field {
  + Name: string
  + Type: string
  + Path: string
  + Doc: string
  + Comment: string
  + Tag: string
  + JSONName: string
  + MapKey: string
}

class FieldList {
  - type: []*Field
}

class Package {
  + ID: string
  + Package: string
  + ImportPath: string
  + Path: string
  + TestPackage: bool
  + Pkg: *packages.Package
  + Equal (in Package) bool
  + Name () string
  + String () string
}

class StringSet {
  - type: map[string][]string
  + All () []string
  + Get (key string) []string
  + Map () (map[string]string, []error)
}


Declaration --> DeclarationKind : Kind
Declaration --> FieldList : Fields
Declaration --> Complexity : Complexity

note top of Declaration
Declaration holds information about a go symbol.
end note



note top of DeclarationKind
DeclarationKind is an enum of go symbol types.
end note


DeclarationList --> Declaration : type

note top of DeclarationList
DeclarationList holds a list of Go symbols.
end note


DeclarationList --> Declaration : Exported()
DeclarationList --> Declaration : Filter()
DeclarationList --> Declaration : Find()
Package --|> Definition : embeded by
Definition --> StringSet : Imports
Definition --> DeclarationList : Types
Definition --> DeclarationList : Consts
Definition --> DeclarationList : Vars
Definition --> DeclarationList : Funcs

note top of Definition
Definition holds all symbols defined for a Package.
end note



note top of Field
Field holds details about a field definition.
end note


FieldList --> Field : type

note top of FieldList
FieldList contains all struct fields.
end note



note top of Package
Package holds go package information.
end note



note top of StringSet
StringSet provides a key based unique string slice.
end note



@enduml
